<?xml version="1.0"?>

<!-- Testcases for Velocity -->
<project name="main" default="test-all" basedir="..">
  <property file="${user.home}/.ant.properties" />
  <property file="${user.home}/build.properties" />
  <property file=".ant.properties" />

  <!-- This file contains all the defaults for building Velocity -->
  <property file="build/build.properties" />

  <!-- JUnit Testbed properties -->
  <property name="test.runner" value="junit.textui.TestRunner"/>

  <!-- Build classpath -->
  <path id="classpath">
    <fileset dir="${velocity.build.dir}/lib">
      <include name="**/*.jar"/>
    </fileset>
    <pathelement location="${build.dest}"/>
    <pathelement location="${build.test.dest}"/>
  </path>

  <!-- =================================================================== -->
  <!-- JUnit Test Cases                                                    -->
  <!-- =================================================================== -->
  <target name="test-clean">
    <!--
         Hack to prevent Ant from complaining about missing directories.
         This is fixed in Ant >1.3, but we are using Ant 1.3 now.
    -->
    <mkdir dir="${build.test}/anakia"/>
    <mkdir dir="${build.test}/cpload"/>
    <mkdir dir="${build.test}/multiloader"/>
    <mkdir dir="${build.test}/texen"/>
    <!--
         Delete the results directories
    -->
    <delete dir="${build.test}/anakia" quiet="true"/>
    <delete dir="${build.test}/cpload" quiet="true"/>
    <delete dir="${build.test}/multiloader" quiet="true"/>
    <delete dir="${build.test}/texen" quiet="true"/>
  </target>

  <target name="test-all" depends="
                                   test-cpload,
                                   test-anakia,
                                   test-texen,
                                   test-texen-classpath,
                                   test-multiloader
                                   "/>

  <target name="test-cpload">
    <echo message="Running Classpath Resource tests..."/>

    <java classname="${test.runner}" fork="yes" dir="${velocity.dir}" failonerror="${test.haltonerror}">
      <arg value="org.apache.velocity.test.ClasspathResourceTestCase"/>
      <classpath>
        <path refid="classpath"/>
        <pathelement location="${test.dir}/cpload/test1.jar"/>
        <pathelement location="${test.dir}/cpload/test2.jar"/>
      </classpath>
    </java>
  </target>

  <target name="test-anakia">
    <echo message="Running Anakia tests..."/>

    <taskdef name="anakia" classname="org.apache.velocity.anakia.AnakiaTask">
      <classpath>
        <path refid="classpath"/>
      </classpath>
    </taskdef>
    <anakia basedir="${test.dir}/anakia/xdocs" destdir="${build.test}/anakia"
            extension=".html" style="./site.vsl"
            projectFile="./stylesheets/project.xml"
            excludes="**/stylesheets/**"
            includes="**/*.xml"
            templatePath="${test.dir}/anakia/xdocs/stylesheets"
            velocityPropertiesFile="${test.dir}/anakia/velocity.properties"
            lastModifiedCheck="false">
    </anakia>
  
    <anakia basedir="${test.dir}/anakia/xdocs" 
            destdir="${build.test}/anakia"
        extension=".context.html" style="./site_contexts.vsl"
        projectFile="./stylesheets/project.xml"
        excludes="**/stylesheets/**"
        includes="**/*.xml"
        templatePath="${test.dir}/anakia/xdocs/stylesheets"
        lastModifiedCheck="false">
        
        <context name="customContext" file="./stylesheets/customContext.xml"/>
    </anakia>    
 
    <java classname="${test.runner}" fork="yes" dir="${velocity.dir}" failonerror="${test.haltonerror}" >
      <arg value="org.apache.velocity.test.AnakiaTestCase"/>
      <classpath>
        <path refid="classpath"/>
      </classpath>
    </java>
  </target>

  <!-- ================================================================ -->
  <!-- T E X E N  T E S T                                               -->
  <!-- ================================================================ -->
  <!-- Generate turbine service code via Texen                          -->
  <!-- ================================================================ -->

  <target name="test-texen">

    <taskdef name="texen" classname="org.apache.velocity.texen.ant.TexenTask">
      <classpath>
        <path refid="classpath"/>
      </classpath>
    </taskdef>

    <texen
      contextProperties="${test.dir}/texen/service.props,${test.dir}/texen/additional.props"
      controlTemplate="Control.vm"
      outputDirectory="${build.test}/texen"
      templatePath="${test.dir}/texen/templates"
      outputFile="report"
    />

    <java classname="${test.runner}" fork="yes" dir="${velocity.dir}" failonerror="${test.haltonerror}">
      <arg value="org.apache.velocity.test.TexenTestCase"/>
      <classpath>
        <path refid="classpath"/>
      </classpath>
    </java>

  </target>

  <!-- ================================================================ -->
  <!-- T E X E N  C L A S S P A T H                                     -->
  <!-- ================================================================ -->
  <!-- Generate turbine service code via Texen with all the templates   -->
  <!-- and ancillary files in a JAR.                                    -->
  <!-- ================================================================ -->

  <target name="test-texen-classpath">

    <!--  note: previously the taskdef included the mysterious attribute reverseLoader="true" -->
    <!--  now that this has been removed, we only guarantee this works with ant 1.5+ -->
    <taskdef name="texen" classname="org.apache.velocity.texen.ant.TexenTask"
       >
      <classpath>
        <pathelement location="${test.dir}/texen-classpath/test.jar"/>
        <path refid="classpath"/>
      </classpath>
    </taskdef>

    <texen
      useClassPath="true"
      contextProperties="service.props"
      controlTemplate="Control.vm"
      outputDirectory="${build.test}/texen-classpath"
      outputFile="report"
    />

    <java classname="${test.runner}" fork="yes" dir="${velocity.dir}" failonerror="${test.haltonerror}">
      <arg value="org.apache.velocity.test.TexenClasspathTestCase"/>
      <classpath>
        <path refid="classpath"/>
      </classpath>
    </java>

  </target>

  <target name="test-multiloader">
    <echo message="Running MultiLoader tests..."/>

    <java classname="${test.runner}" fork="yes" dir="${velocity.dir}" failonerror="${test.haltonerror}">
      <arg value="org.apache.velocity.test.MultiLoaderTestCase"/>
      <classpath>
        <path refid="classpath"/>
        <pathelement location="${test.dir}/multiloader/test1.jar"/>
      </classpath>
    </java>
  </target>

</project>
