<?xml version="1.0"?>

<document>

 <header>
  <title>Coding Standards</title>
  <subtitle>Coding Standards</subtitle>
  <authors>
   <person name="Velocity Documentation Team" email="jvanzyl@locus.apache.org"/>
  </authors>
 </header>

<body>

<s1 title="Coding Standards">

<p>
    This document describes coding conventions that are required
    for code submissions to the Velocity project. 
    
</p>

<p>
    <strong>If you commit code that does not follow the existing conventions and you
    are caught, you will be responsible for fixing your own code.</strong>
</p>

<p>
    Below is a list of coding conventions that are specific to Velocity.
    Anything not explicitly mentioned here should follow the official
    <link href="http://java.sun.com/docs/codeconv/html/CodeConvTOC.doc.html">Sun
    Java Coding Conventions</link>. 
    As in most Open Source Projects, developers are asked to follow 
    coding conventions already in use in the code that you are working 
    on. For example, if the existing code has the bracket on
    the same line as the if statement, then your code
    should also follow that convention.
</p>

<p>
1. Brackets should begin and end on new lines. Examples:
</p>

<p>
<source><![CDATA[

if ( foo )
{
    // code here
}    

try
{
    // code here
}
catch (Exception bar)
{
    // code here
}
finally
{
    // code here
}    

while ( true )
{
    // code here
}    
]]></source>
</p>

<p>
2. Spaces between parentheses are optional. The preference
is to exclude extra spaces. For example, both of these conventions are acceptable:
</p>

<p>
<source><![CDATA[

if (foo)

or

if ( foo )
]]></source>
</p>

<p>
3. 4 spaces. <strong>NO</strong> tabs. Period. Velocity is being developed in a distributed development
enviroment. The Velocity mailing list receives cvs commit messages 
that are almost impossible to read if tabs are used.
</p>

<p>
In Emacs-speak, this translates to the following command:

(setq-default tab-width 4 indent-tabs-mode nil)
</p>

<p>
4. Unix linefeeds for all .java source code files. Only platform-specific
files (e.g. .bat files for Windows) should have the platform-specific linefeeds.
</p>

<p>
5. Javadoc <strong>MUST</strong> exist on all your methods. If you are working
on existing code and there currently isn't a javadoc for that method/class/variable
(or whatever), please contribute and add it. This will help to improve the
Velocity project.
</p>

<p>
6. The Jakarta Apache/Velocity License <strong>MUST</strong> be placed at the top
of each and every file.
</p>

</s1>

</body>
</document>
